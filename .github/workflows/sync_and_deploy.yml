name: Sync and Deploy Workflow

on:
  #  schedule:
  #    - cron: '30 4 * * *'
  #  push:
  #    branches: [ master ]
  pull_request:
    types: [ closed ]
  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: sync_and_deploy
  cancel-in-progress: false

jobs:
  sync-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Download and unzip repository
        run: |
          curl -L https://github.com/monocytess/simple/archive/refs/heads/master.zip > repo.zip
          unzip repo.zip
          rm repo.zip

      - name: Sync files
        run: |
          rsync -av --checksum --delete simple-master/src/js30 docs/public/pages/
          rm -rf simple-master

      - name: Modify Html files
        run: |
          find docs/public/pages/js30 -type f -name "*.html" -exec sed -i '
            /<head>/,/<\/head>/ {
              s|href="\./\./\./assets|href="/assets|g;
              s|href="\.\./\.\./assets|href="/assets|g;
              s|src="\.\./\.\./common/js30\.base\.js|src="/assets/common/js30.base.js|g;
            }
          ' {} \;

      - name: Modify Css files
        run: |
          find docs/public/pages/js30 -type f -name "*.css" -exec  sed -i 's|@import "../../css/js30.css";|@import "/assets/css/js30.base.css";|g' {} \;

      - name: Add CardLink to docs/index.md
        run: |
          # 创建一个临时文件保存新的 <Flow> 标签内容
          echo "<Flow>" > temp_flow_content.md
          for dir in docs/public/pages/js30/*; do
            if [ -d "$dir" ]; then
              folder_name=$(basename "$dir")
              description=$(grep -oP '(?<=<meta name="description" content=").*?(?=">)' "$dir/index.html")
              echo "<CardLink" >> temp_flow_content.md
              echo "  icon=\"$(shuf -n 1 -e 🧭 🥁 🎸 🎹 🎺 🎻 🎷)\"" >> temp_flow_content.md
              echo "  title=\"$folder_name\"" >> temp_flow_content.md
              echo "  description=\"$description\"" >> temp_flow_content.md
              echo "  href=\"/pages/js30/$folder_name/index.html\">" >> temp_flow_content.md
              echo "</CardLink>" >> temp_flow_content.md
            fi
          done
          echo "</Flow>" >> temp_flow_content.md

          # 使用 awk 替换 index.md 中的 <Flow> 内容
          awk '
          BEGIN { RS = ORS = "" }
          /<Flow>/ { 
            sub(/<Flow>.*<\/Flow>/, ""); 
            print 
          }
          { print }
          ' docs/index.md > docs/index_temp.md

          # 将新的 <Flow> 标签内容插入到正确的位置
          awk '
          { print }
          /<Flow>/ {
            while ((getline line < "temp_flow_content.md") > 0) 
              print line
          }
          ' docs/index_temp.md > docs/index.md

          # 删除临时文件
          rm temp_flow_content.md docs/index_temp.md

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 检查事件是否为Pull Request
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            # 获取Pull Request编号
            pr_number=$(jq -r '.pull_request.number' $GITHUB_EVENT_PATH)
            # 创建新的分支名称
            branch_name="blog/sync-auto${pr_number}"
            # 切换到新的分支
            git checkout -b $branch_name
          fi
          
          git add .
          git commit -m "Automated changes by GitHub Actions"
          # 如果是Pull Request，推送更改
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            git push -u https://${GITHUB_TOKEN}@github.com/hviwen/hviwen.github.io.git HEAD:$branch_name -f
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
